# Version field is now obsolete in Docker Compose
services:
  # MySQL Database
  db:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: filerouge
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3307:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Service
  backend:
    build: ./Backend
    container_name: filerouge-backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/filerouge?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    ports:
      - "8082:8082"
    networks:
      - app-network
    restart: unless-stopped

  # Frontend Service
  frontend:
    build: ./Frontend
    container_name: filerouge-frontend
    depends_on:
      - backend
    ports:
      - "80:80"
    networks:
      - app-network
    restart: unless-stopped

  sonarqube:
    image: sonarqube:10.2-community
    container_name: filerouge-sonarqube
    ports:
      - "9000:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonar-db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    networks:
      - app-network
    depends_on:
      - sonar-db
    restart: unless-stopped

  sonar-db:
    image: postgres:13
    container_name: filerouge-sonar-db
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - sonar_db_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped

# Networks
networks:
  app-network:
    driver: bridge

# Volumes
volumes:
  db_data:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
  sonar_db_data: